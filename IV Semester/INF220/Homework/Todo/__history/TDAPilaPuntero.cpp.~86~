//---------------------------------------------------------------------------

#pragma hdrstop

#include "TDAPilaPuntero.h"
// Define el NULL
#include <stddef.h>
#include <iostream>
//---------------------------------------------------------------------------
#pragma package(smart_init)


void TDAPilaPuntero::crear()
{
    Tope = NULL;
}

bool TDAPilaPuntero::vacia()
{
    return (Tope==NULL);
}

int TDAPilaPuntero::cima()
{
   if(vacia())
   {
       throw("Error...");
   }else
   {
       return Tope->elemento;
   }
}

void TDAPilaPuntero::meter(int elemento)
{
    Nodo *aux = new Nodo; // Aqui se hace uso del PUNTERO
	aux->elemento = elemento;
	aux->sig = Tope;
	Tope = aux;
}


void TDAPilaPuntero::sacar(int &dato)
{
	Nodo *aux = Tope;
	dato = aux->elemento;
	Tope = aux->sig;
    delete(aux);

}

void TDAPilaPuntero::imprimir(TDAPilaPuntero &Pila)
{
	TDAPilaPuntero aux;
    int i = 0;

	std::cout << "*" << std::endl;
	while(!Pila.vacia())
	{
		int x;
		Pila.sacar(x);
		std::cout << x << std::endl;
		aux.meter(x);
        ++i;
	}
    std::cout << "*" << std::endl;
	while(i>0)
	{
		int x;
		aux.sacar(x);
        Pila.meter(x);
		i--;
    }

}
