//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Polinomio.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
    : TForm(Owner)
{
}
//---------------------------------------------------------------------------


TDAPolinomioPuntero Polinomio;


const char RUTA[] = "latex C:/Users/Asus/Desktop/test.tex";
const char PDF[] = "pdflatex C:/Users/Asus/Desktop/test.tex";

/*
  1 = 0.05
  ? = x
  1 = 0.0125
  2 = 0.025
  4 = 0.05
  8 = 0.10
  16= 0.2
  32= 0.4
  64= 0.8
  128=1.6
*/

void LineaPP(TCanvas*Canvas,int x0,int y0,int x1,int y1)
{
    Canvas->MoveTo(x0,y0);
    Canvas->LineTo(x1,y1);
}

void dibujarEje(TPaintBox*Area,float escala,float a,float b,bool Centrado)
{
     Area->Canvas->FillRect(Rect(0,0,Area->Width,Area->Height));

     float x = escala/0.025;
     int razon = x;
          Area->Canvas->Pen->Color = clBlack;
     Area->Canvas->Pen->Width = 2;
     LineaPP(Area->Canvas,0,Area->Height/2,Area->Width,Area->Height/2);
     LineaPP(Area->Canvas,Area->Width/2,0,Area->Width/2,Area->Height);
              Area->Canvas->Pen->Width = 1;
     int tamanoLinea = razon/2;
     for(int i=Area->Width/2;i<=Area->Width;i+=razon)
     {
         LineaPP(Area->Canvas,i,Area->Height/2-tamanoLinea,i,Area->Height/2+tamanoLinea);
     }
     for(int i=Area->Width/2;i>=0;i-=razon)
     {
         LineaPP(Area->Canvas,i,Area->Height/2-tamanoLinea,i,Area->Height/2+tamanoLinea);
     }
     for(int i=Area->Height/2;i<=Area->Height;i+=razon)
     {
         LineaPP(Area->Canvas,Area->Width/2-tamanoLinea,i,Area->Width/2+tamanoLinea,i);
     }
     for(int i=Area->Height/2;i>=0;i-=razon)
     {
         LineaPP(Area->Canvas,Area->Width/2-tamanoLinea,i,Area->Width/2+tamanoLinea,i);
     }

}

String Convertir(String &x)
{
    for(int i=1;i<=x.Length();++i)
    {
        if(x[i]=='.')x[i]=',';
    }
    return x;
}



void dibujarFuncion(TPaintBox*Area,TDAPolinomioPuntero &P,float escala,float a,float b)
{

     float aux = escala/0.025;

     for(float x=a;x<=b;x+=escala)
     {
        float y = P.evaluar(x);
        float xs = x+escala;
        float ys = P.evaluar(xs);

        float x0 = (x/0.025)+Area->Width/2;
        float y0 = -1*(y/0.025)+Area->Height/2;
        float x1 = (xs/0.025)+Area->Width/2;
        float y1 = -1*(ys/0.025)+Area->Height/2;

                    Area->Canvas->Pen->Color = clRed;
            Area->Canvas->Pen->Width=4;

        if(y0>=0 & y0<=Area->Height)
        {
            LineaPP(Area->Canvas,x0,y0,x1,y1);

        }
                        if(y1<0)
                        {
                           y1=0;
                        }else
                        if(y1>Area->Height)
                        {
                         y1=Area->Height;
                        }

               Area->Canvas->Pen->Width=1;
               Area->Canvas->Pen->Color = clBlue;
               LineaPP(Area->Canvas,x1,y1,x1,Area->Height/2);





     }
}

void P(String &x)
{
       std::stringstream ss;
     for(int i=1;i<=Polinomio.numero_terminos();++i)
    {
        int exp = Polinomio.exponente(i);
        int coe = Polinomio.coeficiente(exp);

        if(coe>0 && i>1)
        {
             x+="+";
        }
        if(coe==-1)
        {
             x+="-";
        }else
        if(coe!=1)
        {
           x+=IntToStr(coe);;
            //std::cout<<coe;
        }

        if(exp>1)
        {            
                  x+="x^";
                  x+=IntToStr(exp);
                  +aux;
            ///td::cout<<"x^"<<exp;
        }else
        if(exp==1)
        {
             x+="x";
        }


    }
}


void __fastcall TForm1::Button1Click(TObject *Sender)
{
     String x = Edit3->Text;
     String a = Edit1->Text;
     String b = Edit2->Text;

     Double dx =StrToFloat(Convertir(x));
     dibujarEje(PaintBox1,dx,StrToFloat(Convertir(a)),StrToFloat(Convertir(b)),true);
     dibujarFuncion(PaintBox1,Polinomio,StrToFloat(Convertir(x)),StrToFloat(Convertir(a)),StrToFloat(Convertir(b)));
     String p;
     P(p);
     Label3->Caption = p;

     float ini =   StrToFloat(Convertir(a));
          float fin =   StrToFloat(Convertir(b));
     double area =0 ;
     double aux = (b-a);
     aux/=dx;
     int intervalos = aux;
     while(fin>ini)
     {
         if(ini+dx<=fin)
         {
          float y = Polinomio.evaluar(ini);
          if(y*dx<0)
          {
              area+=y*dx*-1;
          }else
          {
          area+= y*dx;
          }


         }
         ini+=dx;
     }




     Label4->Caption = "Area: "+FloatToStr(area);
     //system(RUTA);
	//system(PDF);
}
//---------------------------------------------------------------------------




void __fastcall TForm1::PaintBox1Paint(TObject *Sender)
{
     PaintBox1->Color = clWhite;
     PaintBox1->Canvas->FillRect(Rect(0,0,PaintBox1->Width,PaintBox1->Height));
}
//---------------------------------------------------------------------------



void __fastcall TForm1::CoeficientesClick(TObject *Sender)
{
     int coe = StrToInt(Coeficiente->Text);
     int exp = StrToInt(Exponente->Text);
     Polinomio.poner_termino(coe,exp);
}
//---------------------------------------------------------------------------

void __fastcall TForm1::FormCreate(TObject *Sender)
{
           Polinomio.crear();
}
//---------------------------------------------------------------------------



